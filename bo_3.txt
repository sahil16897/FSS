public class User {
    long id;
    String name, username, password, role;
    Date enrolled_date;
    
    User(long id, String name, String username, String password, String role, Date enrolled_date){
        this.id = id;
        this.name = name;
        this.username = username;
        this.password = password;
        this.role = role;
        this.enrolled_date = enrolled_date;
    }
    
    public long getId(){
        return this.id;
    }
}

##############################################

import java.util.*;
import java.sql.*;

public class UserPlaylistDAO {
	public List<UserPlaylist> getAllPlaylist(User user) {
		List<UserPlaylist> list = new ArrayList<>();
        try{
            DbConnection db = new DbConnection();
            Connection con = db.getConnection();
            PreparedStatement smt = con.prepareStatement("select * from playlist where id in (select playlist_id from user_playlist where user_id = ?)");
            smt.setLong(1, user.getId());
            ResultSet rs = smt.executeQuery();
            while(rs.next()){
                long id = rs.getLong(1);
                String name = rs.getString(2);
                java.util.Date date = rs.getDate(3);
                
                Playlist pl = new Playlist(id, name, date);
                UserPlaylist upl = new UserPlaylist(pl, user);
                
                list.add(upl);
            }
            
            con.close();
        }catch(Exception e){}
        
        return list;
	}
	
	public Boolean addTrack(UserPlaylist playlist, Track track) {
	    try{
            DbConnection db = new DbConnection();
            Connection con  = db.getConnection();
            PreparedStatement smt = con.prepareStatement("insert into track_playlist values(?,?) ");
            smt.setLong(1, track.getId());
            smt.setLong(2,playlist.getPlaylist().getId());
            
            int i = smt.executeUpdate();
            
            if(i>0)
                return true;
                
            con.close();
            
	    }catch(Exception e){}
		
        return false;
	}
}


######################################################################################

import java.util.*;
import java.sql.*;


public class UserDAO {
    public User getUser(String username) {
	    User user = null;
        
        try{
            DbConnection db = new DbConnection();
            Connection con = db.getConnection();
            PreparedStatement smt = con.prepareStatement("select * from user where username = ?");
            smt.setString(1,username);
            ResultSet rs = smt.executeQuery();
            while(rs.next()){
                java.util.Date date = rs.getDate(6);
                user = new User(rs.getLong(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), date); 
            }
            
            con.close();
        }catch(Exception e){}
        return user;
	}
}

######################################################################################3

import java.util.*;
import java.sql.*;

public class TrackDAO {
	public List<Track> getAllTrack() {
		List<Track> list = new ArrayList<>();
        try{
            DbConnection db = new DbConnection();
            Connection con = db.getConnection();
            PreparedStatement smt = con.prepareStatement("select * from track");
            ResultSet rs = smt.executeQuery();
            while(rs.next()){
                long id = rs.getLong(1);
                String name = rs.getString(2);
                String genre = rs.getString(3);
                String lang = rs.getString(4);
                java.util.Date d = rs.getTimestamp(5);
                String url = rs.getString(6);
                
                Track track  = new Track(id, name, genre, lang, d, url);
                
                list.add(track);
            }
            
            con.close();
            
        }catch(Exception e){}
		
        return list;
	}
	
	public List<Track> getTracks(UserPlaylist playlist) {
		List <Track> list  = new ArrayList<>();
        try{
            DbConnection db = new DbConnection();
            Connection con = db.getConnection();
            PreparedStatement smt= con.prepareStatement("select * from track where id in (select track_id from track_playlist where playlist_id = ?)");
            smt.setLong(1, playlist.getPlaylist().getId());
            ResultSet rs  = smt.executeQuery();
            while(rs.next()){
                long id = rs.getLong(1);
                String name = rs.getString(2);
                String genre = rs.getString(3);
                String lang = rs.getString(4);
                java.util.Date d = rs.getTimestamp(5);
                String url = rs.getString(6);
                
                Track track  = new Track(id, name, genre, lang, d, url);
                
                list.add(track);
            }
            con.close();
            
        }catch(Exception e){}
        
		return list;
	}
}
####################################################################

import java.util.*;
import java.io.*;
import java.text.*;

public class Main {
	public static void main(String args[])throws Exception {
		BufferedReader br  = new BufferedReader(new InputStreamReader(System.in));
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        
        System.out.println("Available Tracks:");
        TrackDAO tdao = new TrackDAO();
        List<Track> alltracks = tdao.getAllTrack();
		System.out.printf("%-25s %-10s %s\n","Name","Language","Genre");
        for(Track t : alltracks){
            System.out.printf("%-25s %-10s %s\n",t.getName(),t.getLanguage(),t.getGenre());
        }
        
        System.out.println("Enter the username:");
        String uname = br.readLine();
        UserDAO udao = new UserDAO();
        User user = udao.getUser(uname);
        UserPlaylistDAO updao = new UserPlaylistDAO();
        List<UserPlaylist> list = updao.getAllPlaylist(user);
        if(list.isEmpty()){
            System.out.println("No playlist present for the given user");
            System.exit(0);
        }
        
        System.out.println("Available Playlist:");
         System.out.printf("%-15s %s\n", "Name", "Created Date");
         for(UserPlaylist p : list){
              System.out.printf("%-15s %s\n", p.getPlaylist().getName(), sdf.format(p.getPlaylist().getCreatedDate()));
         }
         
        System.out.println("Enter the name of playlist");
        String pname = br.readLine();
        UserPlaylist playlist = null;
        for(UserPlaylist p : list){
            if(pname.equals(p.getPlaylist().getName())){
                playlist = p;
                break;
            }
        }
        
        System.out.println("Enter the name of the track:");
        String tname = br.readLine().toLowerCase();
        Track track = null;
        int flag =0;
        for(Track t : alltracks){
            if(tname.equalsIgnoreCase(t.getName())){
                track = t;
                flag =1;
                break;
            }
        }
        
        if(flag == 0){
            System.out.println("Track not available");
        }
        else{
        
            boolean res = updao.addTrack(playlist, track);
            if(res){
                System.out.println("Track added successfully");
            }else{
                System.out.println("Track cannot be added");
            }
        
        }
        
        List<Track> gettrack = tdao.getTracks(playlist);
        System.out.println("Tracks in the playlist:");
        System.out.printf("%-25s %-10s %s\n","Name","Language","Genre");
        for(Track t : gettrack){
            System.out.printf("%-25s %-10s %s\n",t.getName(), t.getLanguage(), t.getGenre());
        }
        
        
        
        
	}
}

###########################################################################

import java.util.*;

public class Track {
	long id;
    String name, genre, language, file_url;
    Date duration;
    
    Track(long id, String name, String genre, String language, Date duration, String file_url){
        this.id = id;
        this.name = name;
        this.genre = genre;
        this.language = language;
        this.duration = duration;
        this.file_url = file_url;
    }
    
    public long getId(){
        return this.id;
    }
    
    public String getName(){
        return this.name;
    }
    
    public String getGenre(){
        return this.genre;
    }
    
    public String getLanguage(){
        return this.language;
    }
    
    public Date getDuration(){
        return this.duration;
    }
    
    public String getUrl(){
        return this.file_url;
    }
}
################################################################################

import java.util.*;

public class Playlist {
	
	long id;
    String name;
    Date created_date;
    
    Playlist(long id, String name, Date created_date){
        this.id = id;
        this.name = name;
        this.created_date = created_date;
    }
    
    public long getId(){
        return this.id;
    }
    
    public String getName(){
        return this.name;
    }
    
    public Date getCreatedDate(){
        return this.created_date;
    }
}
############################################################################
import java.util.*;

public class UserPlaylist {
	Playlist playlist;
    User user;
    
    UserPlaylist(Playlist playlist, User user){
        this.playlist = playlist;
        this.user = user;
    }
    
    public Playlist getPlaylist(){
        return this.playlist;
    }
    
    public User getUser(){
        return this.user;
    }
}
